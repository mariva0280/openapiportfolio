openapi: 3.0.3
info:
  title: API Formulario de Contacto
  version: v1
  description: API para la gestión de formularios de contacto en el portfolio
  contact:
    name: Vanessa Fernandez
    email: marivafp@gmail.com
    url: https://portfolio.com/contact
  license:
    name: MIT
    url: https://portfolio.com/license
  termsOfService: https://portfolio.com/terms-Of-Service
servers:
  - url: https://localhost:5000/api/v1
    description: Open api Mocker
  - url: https://api-sandbox.portfolio.com/api/v1
    description: Sandbox server
  - url: https://api.portfolio.com/api/v1
    description: Production server
tags:
  - name: Contactos
    description: Operaciones y recursos relacionados con formularios de contacto
security: 
  -  apiKeyAuth: []    
paths:
  /contacts:
    post:
      summary: Crear una nueva presentación de formulario de contacto
      description: Endpoint para crear una nueva presentación de formulario de contacto
      operationId: createContact
      tags:
        - Contactos
      requestBody:
        description: Cuerpo de solicitud para la creación de una presentación de formulario de contacto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewContact'
            examples:
              contactoEjemploPost:
                $ref: '#/components/examples/exampleContactPost'
      responses:
        '201':
          description: Presentación de formulario de contacto creada exitosamente
          headers:  
            Location:
              description: URL del recurso creado
              schema: 
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardContactResponse'
              examples:
                'contactoEjemplo':
                  $ref: '#/components/examples/exampleContactPost' 
        '400':
          description: Error en los parámetros de entrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardErrorResponse'
              examples: 
                invalidRequest:
                  $ref: '#/components/examples/InvalidRequestExample'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        default: 
          $ref: '#/components/responses/defaultResponse'
    get:
      summary: Obtener lista de contactos
      description: Endpoint para obtener toda la lista de contactos
      operationId: getAllContacts
      tags:
        - Contactos
      parameters: 
        - in: query
          name: sortBy
          schema: 
            type: string
            enum: [name]
          description: Campo por el cual ordenar los resultados (nombre)
          required: false
        - in: query
          name: sortOrder
          schema: 
            type: string
            enum: [asc, desc]
          description: Orden ascendente (asc) o descendente (desc)
          required: false
        - in: query
          name: page 
          schema: 
            type: integer
            minimum: 1
          description: Número de página para la paginación
          required: false          
        - in: query
          name: pageSize
          schema: 
            type: integer
            minimum: 1 
            maximum: 15 
          description: Tamaño de página para la paginación (máximo 15)
          required: false  
      responses:
        '200':
          description: Respuesta exitosa a la solicitud de la lista de contactos
          content:
            application/json:
              schema:
                type: object
                properties: 
                  data:
                    type: array
                    items: 
                      $ref: "#/components/schemas/standardContactResponse"
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                        example: 1
                      totalPages:
                        type: integer
                        example: 3
                      totalItems:
                        type: integer
                        example: 45
                      pageSize:
                        type: integer
                        example: 15
              examples: 
                listaContactos:
                  $ref: '#/components/examples/exampleContactList'
        '400': 
          $ref: '#/components/responses/badRequestResponse' 
        '403':
          $ref: '#/components/responses/forbiddenResponse'        
        default:
          $ref: '#/components/responses/defaultResponse'
  /contacts/{id}:
    get: 
      summary: Obtener un contacto por ID 
      description: Endpoint para obtener un contacto específico por ID 
      operationId: getContactById
      tags:
        - Contactos
      parameters:
        - name: id
          in: path 
          required: true
          description: ID del contacto
          schema:         
              type: string
              format: uuid
      responses:
        '200':
          description: Respuesta exitosa a la solicitud de contacto por ID 
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/standardContactResponse'
              examples: 
                contactoEjemplo:
                  $ref: '#/components/examples/exampleContactResponse' 
        '403':
          $ref: '#/components/responses/forbiddenResponse' 
        '404':
          $ref: '#/components/responses/notFoundResponse'         
        default:
          $ref: '#/components/responses/defaultResponse'      
    delete:
      summary: Eliminar un contacto por ID 
      description: Endpoint para eliminar contacto por ID 
      operationId: deleteById
      tags:
        - Contactos
      parameters: 
        - name: id 
          in: path
          required: true
          description: ID del contacto   
          schema: 
            type: string
            format: uuid
      responses: 
        '204':
          description: Contacto eliminado exitosamente
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        default: 
          $ref: '#/components/responses/defaultResponse'
    patch: 
      summary: Actualizar parcialmente un contacto
      description: Actualiza los campos nombre y telefono de un contacto
      operationId: updateContactById
      tags:
        - Contactos
      parameters:
        - name: id
          in: path 
          required: true
          description: ID del contacto
          schema:         
              type: string
              format: uuid
      requestBody: 
        description: Datos parciales del contacto
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre de la persona que envía el formulario
                  pattern: "^[a-zA-ZñÑáéíóúÁÉÍÓÚüÜ\\s]+$"
                  example: 'Juan Pérez'
                phone:
                  type: string
                  description: Número de teléfono de la persona que envía el formulario
                  pattern: "^[0-9]{1,12}$"
                  example: '123456789'
            examples:
              examplePatchContact:
                summary: Ejemplo de actualización parcial de contacto
                value:
                  name: 'Juan Pérez'
                  phone: '123456789'
      responses:
        '200':
          description: Respuesta exitosa a la solicitud de contacto por ID 
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/standardContactResponse'
              examples: 
                contactoEjemplo:
                  $ref: '#/components/examples/exampleContactResponse' 
        '403':
          $ref: '#/components/responses/forbiddenResponse' 
        '404':
          $ref: '#/components/responses/notFoundResponse'         
        default:
          $ref: '#/components/responses/defaultResponse'            
components: 
  schemas:
    NewContact:
      type: object
      required: 
        -  name
        -  phone
        -  email
        -  message
      properties: 
        name:
          type: string
          description: Nombre de la persona que envía el formulario
          pattern: "^[a-zA-ZñÑáéíóúÁÉÍÓÚüÜ\\s]+$"
          example: 'Juan Pérez'
        phone:
          type: string
          description: Número de teléfono de la persona que envía el formulario
          pattern: "^[0-9]+$"
          maxLength: 15 
          example: '123456789'
        email:
          type: string
          description: Email de la persona que envía el formulario
          format: email
          example: marivafp@gmail.com
        message:
          type: string
          description: Mensaje de la persona que envía el formulario
          maxLength: 500 
    standardContactResponse:
      allOf: 
        -  $ref: "#/components/schemas/NewContact"
        -  type: object
           properties: 
            id:
              type: string
              format: uuid
              example: '550e8400-e29b-41d4-a716-446655440000'
    standardErrorResponse:
      description: Modelo con el contenido estándar de respuesta de error
      type: object
      properties: 
        errors:
          description: Listado de objetos con detalle de los errores 
          type: array
          items: 
            type: object
            properties:  
              code:
                description: Código de error
                type: string
                minLength: 6 
                maxLength: 10 
                example: 'BADR-001'
              message:
                description: Contenido del mensaje de error 
                type: string
                minLength: 6 
                maxLength: 2048 
                example: 'Valor requerido' 
              field:
                description: Nombre del campo en donde se detectó el error 
                type: string
                minLength: 4 
                maxLength: 100 
                example: name  
                nullable: true
            required: 
              -  code
              -  message  
              -  field 
      required: 
        -  errors           
  examples: 
    exampleContactPost:
      summary: Ejemplo de creación de contacto
      value: 
        name: 'Juan Pérez'
        phone: '123456789'
        email: 'juan.perez@example.com'
        message: 'Hola, me gustaría saber más sobre tus servicios'
    exampleContactResponse:
      summary: Ejemplo de contacto completo
      value: 
        id: '550e8400-e29b-41d4-a716-446655440000'
        name: 'Juan Pérez'
        phone: '123456789'
        email: 'juan.perez@example.com'
        message: 'Hola, me gustaría saber más sobre tus servicios' 
    exampleContactList:
      summary: Ejemplo lista de contactos
      value: 
        data:
          - id: '550e8400-e29b-41d4-a716-446655440000'
            name: 'Juan Pérez'
            phone: '123456789'
            email: 'juan.perez@example.com'
            message: 'Hola, me gustaría saber más sobre tus servicios' 
          - id: '550e8400-e29b-41d4-a716-446655440001'
            name: 'María López'
            phone: '987654321'
            email: 'maria.lopez@example.com'
            message: 'Me gustaría obtener información sobre sus tarifas.' 
        pagination:
          currentPage: 1
          totalPages: 3
          totalItems: 45
          pageSize: 15       
    InvalidRequestExample:
      summary: Errores en los parámetros de entrada
      value: 
        errors:
          - code: 'BADR-001'
            message: 'El campo "email" es requerido.'
            field: email
          - code: 'BADR-002'
            message: 'El formato del email es inválido'
            field: email
          - code: 'BADR-003'
            message: 'El campo "phone" es requerido'
            field: phone
          - code: 'BADR-004'
            message: 'El teléfono debe tener el siguiente pattern "^[0-9]+$"'  
            field: phone
          - code: 'BADR-005'
            message: 'El campo "name" es requerido'
            field: name
          - code: 'BADR-006'
            message: 'El nombre debe tener el siguiente pattern "^[a-zA-ZñÑáéíóúÁÉÍÓÚüÜ\\s]+$"'
            field: name
          - code: 'BADR-007'
            message: 'El campo "message" es requerido'
            field: message
          - code: 'BADR-008'  
            message: 'Mensaje demasiado largo'
            field: message      

  parameters: {}
  requestBodies: {}           
  headers:   {}
  responses:  
    badRequestResponse:
      description: Respuesta de error en parámetros de entrada
      content: 
        application/json:
          schema: 
            $ref: '#/components/schemas/standardErrorResponse'
          example:
            errors: 
              - code: 'BADR-001'
                message: 'Valor requerido'
                field: name  
    forbiddenResponse:
      description: Respuesta de error de autorización'
      content: 
        application/json:
          schema: 
            $ref: '#/components/schemas/standardErrorResponse'
          example: 
            errors:
              - code: 'FORB-001'
                message: 'Token inválido'
                field: null 
    notFoundResponse:
      description: Respuesta de error cuando el recurso no es encontrado
      content: 
        application/json:
          schema: 
            $ref: "#/components/schemas/standardErrorResponse"
          example: 
            errors:
              - code: 'NOTF-404'
                message: 'Recurso no encontrado'
                field: null                          
    defaultResponse:
      description: Respuesta de error default para errores no controlados
      content: 
        application/json:
          schema: 
            $ref: '#/components/schemas/standardErrorResponse'      
          example:
            errors:
              - code: 'SERVER-500'
                message: 'Internal server error' 
                field: null        
  securitySchemes: 
    apiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
    